# Definimos la clase base Animal
class Animal:
    # M√©todo constructor con nombre y edad
    def __init__(self, nombre, edad):
        self.nombre = nombre  # Atributo nombre
        self.edad = edad      # Atributo edad

    # M√©todo gen√©rico que puede ser sobreescrito por subclases
    def hablar(self):
        pass  # No hace nada aqu√≠, se espera que subclases lo definan

    # M√©todo que describe al animal
    def describir(self):
        return f"{self.nombre} tiene {self.edad} a√±os."  # Devuelve descripci√≥n del animal

# Clase Perro hereda de Animal
class Perro(Animal):
    # Sobrescribe el m√©todo hablar
    def hablar(self):
        return "¬°Guau!"  # Sonido t√≠pico de un perro

# Clase Gato tambi√©n hereda de Animal
class Gato(Animal):
    # Sobrescribe el m√©todo hablar
    def hablar(self):
        return "Miau..."  # Sonido t√≠pico de un gato

# Clase extra que NO hereda de Animal, pero se usar√° en herencia m√∫ltiple
class MascotaInteligente:
    # M√©todo que muestra una habilidad de mascota inteligente
    def saludar(self):
        return f"Hola, soy {self.nombre} y puedo aprender trucos üß†"

# Clase que hereda de Gato Y de MascotaInteligente (herencia m√∫ltiple)
class GatoRobot(Gato, MascotaInteligente):
    # M√©todo adicional exclusivo de GatoRobot
    def cargar(self):
        return "üîã Cargando bater√≠as..."

# Bloque principal que solo se ejecuta si este archivo es ejecutado directamente
if __name__ == "__main__":
    # Creamos un objeto Perro
    perro = Perro("Toby", 4)

    # Creamos un objeto Gato
    gato = Gato("Luna", 3)

    # Creamos un objeto GatoRobot, que hereda de Gato y MascotaInteligente
    robogato = GatoRobot("MichiBot", 2)

    # Mostramos descripci√≥n y sonido del perro
    print(perro.describir(), perro.hablar())

    # Mostramos descripci√≥n y sonido del gato
    print(gato.describir(), gato.hablar())

    # Mostramos descripci√≥n, sonido, saludo y estado de bater√≠a del GatoRobot
    print(robogato.describir(), robogato.hablar(), robogato.saludar(), robogato.cargar())
